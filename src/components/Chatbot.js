import React, { useState, useEffect, useRef } from 'react';
import Message from './Message';
import './Chatbot.css';

const Chatbot = () => {
  const [messages, setMessages] = useState([]);
  const [input, setInput] = useState('');
  const [isTyping, setIsTyping] = useState(false);
  const messagesEndRef = useRef(null); // For scrolling to the bottom

  // Scroll to the bottom whenever messages change
  useEffect(() => {
    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });
  }, [messages]);

  // Mock financial chatbot responses
  const getBotResponse = (userMessage) => {
    const responses = {
      "what is revenue?": "Revenue is the total income generated by a company from its operations.",
      "show me the latest analytics": "Sure! Here are the latest analytics: Revenue up by 15%, Net profit up by 10%.",
      "who are the top customers?": "Top customers are: Customer A, Customer B, and Customer C.",
    };
    return responses[userMessage.toLowerCase()] || "I'm sorry, I don't have the answer to that. Please ask another question.";
  };

  const handleSendMessage = () => {
    if (input.trim()) {
      const userMessage = { text: input, sender: 'user' };
      setMessages((prevMessages) => [...prevMessages, userMessage]);
      setInput('');

      setIsTyping(true);
      setTimeout(() => {
        const botMessage = { text: getBotResponse(input), sender: 'bot' };
        setMessages((prevMessages) => [...prevMessages, botMessage]);
        setIsTyping(false);
      }, 1000);
    }
  };

  const handleKeyPress = (e) => {
    if (e.key === 'Enter') {
      handleSendMessage();
    }
  };

  return (
    <div className="chatbot">
      <div className="quick-suggestions">
        {/* Quick suggestions to prompt the user */}
        {["What is revenue?", "Show me the latest analytics", "Who are the top customers?"].map((suggestion, index) => (
          <button
            key={index}
            onClick={() => setInput(suggestion)}
            aria-label={`Suggest: ${suggestion}`}
          >
            {suggestion}
          </button>
        ))}
      </div>

      <div className="chat-window">
        {/* Render messages */}
        {messages.map((msg, index) => (
          <Message key={index} text={msg.text} sender={msg.sender} />
        ))}

        {/* Typing indicator */}
        {isTyping && <div className="message bot typing">...</div>}
        
        {/* Scroll to the bottom */}
        <div ref={messagesEndRef}></div>
      </div>

      <div className="input-area">
        <input
          type="text"
          placeholder="Ask a financial question..."
          value={input}
          onChange={(e) => setInput(e.target.value)}
          onKeyPress={handleKeyPress}
          aria-label="Type your message"
        />
        <button onClick={handleSendMessage} aria-label="Send message">Send</button>
      </div>
    </div>
  );
};

export default Chatbot;
